import { useRouter } from 'next/navigation';
import { createContext, useState, useEffect, useContext } from 'react'
import Navbar from '@/Components/Navbar'
import '../app/globals.css'
import { Inter } from 'next/font/google'
import Footer from '@/Components/Footer'


const NavbarContext = createContext();
// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

export const NavbarProvider = ({ children }) => {

    const router = useRouter();
    const [cart, setCart] = useState({});
    const [subTotal, setSubTotal] = useState();
    const [user, setUser] = useState({value: null});
    const [key, setkey] = useState(0);

    useEffect(() => {
        try {
            if (localStorage.getItem("cart")) {
                setCart(JSON.parse(localStorage.getItem("cart")))
                saveCart(JSON.parse(localStorage.getItem("cart")))
            }
        }
        catch (err) {
            console.log(err);
            localStorage.clear();
        }
        const token = localStorage.getItem('token');
        if(token){
            setUser({value: token});
            setkey(Math.random())
        }
    }, []);


    const saveCart = (myCart) => {

        localStorage.setItem("cart", JSON.stringify(myCart))
        localStorage.setItem("subTotal", JSON.stringify(subTotal))

        let subT = 0;
        let keys = Object.keys(myCart);
        // let keys = Object.keys(cart).length; myCart[keys[i]]
        for (let i = 0; i < keys.length; i++) {
            subT = subT + myCart[keys[i]].price * myCart[keys[i]].qty;
        }
        setSubTotal(subT)
        console.log("savecart", myCart, subT, subTotal);
    }
    const addToCart = (itemCode, qty, price, name, size, variant) => {
        // console.log("addtocart", itemCode, qty, price, name, size);
        // console.log(itemCode);
        let newCart = { ...cart };
        if (itemCode in cart) {
            newCart[itemCode].qty = newCart[itemCode].qty + 1;
        }
        else newCart[itemCode] = { qty: 1, price, name, size }

        setCart(newCart);
        saveCart(newCart)
    }
    const clearTheCart = () => {
        console.log("Clear the cart runs");
        setCart({});
        saveCart({})
    }
    const removeFromCart = (itemCode, qty, price, name, size, variant) => {
        let newCart = JSON.parse(JSON.stringify(cart));
        console.log(itemCode);
        if (itemCode in cart) {
            newCart[itemCode].qty = cart[itemCode].qty - qty;
        }

        if (newCart[itemCode]["qty"] <= 0) delete newCart[itemCode];
        setCart(newCart);
        saveCart(newCart)
    }

    const logout = () => {
        console.log("Logout clicked");
        setUser({value: null})
        localStorage.removeItem("token")
        setkey(Math.random())
        router.push('/')
    }


    return (
        <NavbarContext.Provider value={{ cart, addToCart, removeFromCart, clearTheCart, subTotal, setCart, saveCart, user, logout }}>
            {children}
        </NavbarContext.Provider>

    )

}
export function useNavbar() {
    return useContext(NavbarContext);
}

// export { NavbarProvide;
